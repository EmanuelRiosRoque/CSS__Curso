/*

Structural
    :root - Representa la raiz del documento (html) usando una pseudoclase tenemos más especificidad que si usáramos html

    :empty - Esta pseudoclase se aplica para los elementos vacios, es decir, etiquetas que no tienen contenido
    
    -child
        :first-child - Selecciona al primer hijo (independientemente del tipo de etiqueta)
        :last-child - Selecciona al ultimo hijo (independientemente del tipo de etiqueta)
        :nth-child(n) - Selecciona al hijo n(independientemente del tipo de etiqueta)
        :nth-last-child(n) Selecciona al hijo n empezando a contar desde el último (independientemente del tipo de etiqueta)
        :only-child Selecciona al hijo unico(independientemente del tipo de etiqueta)
    
    -type
        :first-of-type
        :last-of-type
        :nth-of-type()
        :nth-last-of-type()
        :only-of-type
    Valores posibles:
        odd - Impares
        even - Pares
        numeros enteros - 2,3,4...
        equaciones (1n,3n,4n+1,n+4,...)
            n es un multiplicador va de 0 hasta que se quede sin elementos
    
Negation
    :not() - Selecciona al elemento que no cumpla la condición, se puede poner cualquier selector salvo otro :not
*/

/* .parrafo{
    padding: .5em;
    background: lightskyblue;
}

.parrafo:empty{ /*esta clase se aplica a las estiquetas que no tengan contenido*/
    /*all: unset; /*Que hace all? resetea todas las propiedades exepto direction y unicode id se utilzan cuando hacemos paginas que no se leen de izquierda a derecha.
} */

/*---------------------------------------------*/

/* .parrafo:first-child{
    background: red;
}

.parrafo:last-child{
    background: blue;
} */

/*---------------------------------------------*/
/* .parrafo:nth-child(odd){  /*con odd se selecionan los pares
    background: chocolate;
}

.parrafo:nth-child(even){ /*con even se seleccionan los inpares
    background: chocolate;
} */

/* .parrafo:nth-child(3n){  /* N primero vale 0, despues 1,despues 2 y por ultimo 3
    background: chocolate;
} */

/* .parrafo:nth-child(3n+1){  
    background: chocolate;
} */

/* .parrafo:nth-child(n + 4){
    background: chocolate;
} */

/* .parrafo:nth-last-child(n+3){
    background: chocolate;
} */

/* .parrafo:only-child{  /*esta pseudo clase se aplica solo cuando hay un hijo unico
    background: chocolate;
} */

/* .parrafo:first-of-type{
    background: chocolate;
} */

.parrafo:not(.firts){
    background: chocolate;
}